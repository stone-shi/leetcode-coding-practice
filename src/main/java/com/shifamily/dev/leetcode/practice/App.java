/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.shifamily.dev.leetcode.practice;

import lombok.extern.slf4j.Slf4j;
import org.reflections.Reflections;

import java.util.*;

@Slf4j
public class App {

    public static String[] casesToRun = {};


    private static Set<Class<? extends BasicStudy>> getTestClass(){
        Reflections reflections = new Reflections("com.shifamily.dev.leetcode.practice");
        return reflections.getSubTypesOf(BasicStudy.class);
    }

    public static void main(String[] args) {
        Set<Class<? extends BasicStudy>> testClasses = getTestClass();
        LinkedList<RunState> runStats = new LinkedList<>();

        HashSet<String> caseSet = null;
        if (args != null && args.length > 0)
            caseSet = new HashSet<>(Arrays.asList(args));
        else if (casesToRun != null && casesToRun.length > 0)
            caseSet = new HashSet<>(Arrays.asList(casesToRun));


        for (Class<? extends BasicStudy> clazz: testClasses ) {
            if (caseSet != null && ! caseSet.contains(clazz.getSimpleName()))
                continue;

            BasicStudy basicStudy = null;
            try {
                basicStudy = clazz.newInstance();
            } catch (InstantiationException | IllegalAccessException e) {
                log.error("Error to create instance of class " , e);
            }
            log.info("Running {} ...", basicStudy.getClass().getName());
            List<RunState> runStat = basicStudy.runCases();
            runStats.addAll(runStat);
        }

        log.info("##### Result #######");
        for (RunState r: runStats) {
            log.info("{}", r);
        }

    }
}
